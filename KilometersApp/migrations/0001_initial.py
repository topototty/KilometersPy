# Generated by Django 5.1.3 on 2024-12-12 18:48

import KilometersApp.models
import django.contrib.auth.models
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CargoType',
            fields=[
                ('cargo_type_id', models.AutoField(primary_key=True, serialize=False, verbose_name='ID типа груза')),
                ('name', models.CharField(max_length=50, verbose_name='Название типа груза')),
            ],
            options={
                'verbose_name': 'Тип груза',
                'verbose_name_plural': 'Типы грузов',
            },
            bases=(models.Model, KilometersApp.models.UrlMixin),
        ),
        migrations.CreateModel(
            name='DriversLicenseCategoryType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True, verbose_name='Название категории ВУ')),
                ('description', models.TextField(verbose_name='Описание категории ВУ')),
            ],
            options={
                'verbose_name': 'Категория ВУ',
                'verbose_name_plural': 'Категории ВУ',
            },
            bases=(models.Model, KilometersApp.models.UrlMixin),
        ),
        migrations.CreateModel(
            name='MeasurementUnit',
            fields=[
                ('measurement_unit_id', models.AutoField(primary_key=True, serialize=False, verbose_name='ID единицы измерения')),
                ('name', models.CharField(max_length=50, verbose_name='Название')),
            ],
            options={
                'verbose_name': 'Единица измерения',
                'verbose_name_plural': 'Единицы измерения',
            },
            bases=(models.Model, KilometersApp.models.UrlMixin),
        ),
        migrations.CreateModel(
            name='OrderStatus',
            fields=[
                ('order_status_id', models.AutoField(primary_key=True, serialize=False, verbose_name='ID статуса')),
                ('name', models.CharField(max_length=50, verbose_name='Название статуса')),
            ],
            options={
                'verbose_name': 'Статус заказа',
                'verbose_name_plural': 'Статусы заказов',
            },
            bases=(models.Model, KilometersApp.models.UrlMixin),
        ),
        migrations.CreateModel(
            name='VehicleStatus',
            fields=[
                ('vehicle_status_id', models.AutoField(primary_key=True, serialize=False, verbose_name='ID статуса')),
                ('status', models.CharField(max_length=50, verbose_name='Статус')),
            ],
            options={
                'verbose_name': 'Статус ТС',
                'verbose_name_plural': 'Статусы ТС',
            },
            bases=(models.Model, KilometersApp.models.UrlMixin),
        ),
        migrations.CreateModel(
            name='VehicleType',
            fields=[
                ('vehicle_type_id', models.AutoField(primary_key=True, serialize=False, verbose_name='ID типа ТС')),
                ('name', models.CharField(max_length=50, verbose_name='Название')),
                ('max_length', models.DecimalField(decimal_places=2, default=1, max_digits=5, verbose_name='Максимальная длина (м)')),
                ('max_width', models.DecimalField(decimal_places=2, default=1, max_digits=5, verbose_name='Максимальная ширина (м)')),
                ('max_weight', models.DecimalField(decimal_places=2, default=1, max_digits=7, verbose_name='Максимальный вес (кг)')),
                ('price', models.DecimalField(decimal_places=2, default=1, max_digits=7, verbose_name='Минимальная цена')),
                ('image', models.ImageField(blank=True, default=1, null=True, upload_to='vehicle_images/', verbose_name='Изображение ТС')),
            ],
            options={
                'verbose_name': 'Тип ТС',
                'verbose_name_plural': 'Типы ТС',
            },
        ),
        migrations.CreateModel(
            name='UserProxy',
            fields=[
            ],
            options={
                'verbose_name': 'Пользователь',
                'verbose_name_plural': 'Пользователи',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('auth.user', KilometersApp.models.UrlMixin),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Driver',
            fields=[
                ('driver_id', models.AutoField(primary_key=True, serialize=False, verbose_name='ID водителя')),
                ('drivers_license_number', models.CharField(max_length=15, unique=True, verbose_name='Номер водительского удостоверения')),
                ('date_of_issue_of_drivers_license', models.DateField(verbose_name='Дата выдачи ВУ')),
                ('expiration_date_of_drivers_license', models.DateField(verbose_name='Срок действия ВУ')),
                ('driving_experience', models.IntegerField(verbose_name='Стаж вождения (лет)')),
                ('user_id', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
                ('license_categories', models.ManyToManyField(related_name='drivers', to='KilometersApp.driverslicensecategorytype', verbose_name='Категории ВУ')),
            ],
            options={
                'verbose_name': 'Водитель',
                'verbose_name_plural': 'Водители',
            },
            bases=(models.Model, KilometersApp.models.UrlMixin),
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('order_id', models.AutoField(primary_key=True, serialize=False, verbose_name='ID заказа')),
                ('order_number', models.CharField(max_length=9, unique=True, verbose_name='Номер заказа')),
                ('cargo_width', models.DecimalField(decimal_places=2, max_digits=5, verbose_name='Ширина груза')),
                ('cargo_length', models.DecimalField(decimal_places=2, max_digits=5, verbose_name='Длина груза')),
                ('cargo_weight', models.DecimalField(decimal_places=2, max_digits=5, verbose_name='Вес груза')),
                ('cargo_description', models.TextField(verbose_name='Описание груза')),
                ('origin_address', models.CharField(max_length=255, verbose_name='Адрес отправления')),
                ('destination_address', models.CharField(max_length=255, verbose_name='Адрес доставки')),
                ('origin_coordinates', models.CharField(max_length=50, null=True, verbose_name='Координаты отправления')),
                ('destination_coordinates', models.CharField(max_length=50, null=True, verbose_name='Координаты доставки')),
                ('delivery_date', models.DateField(verbose_name='Дата доставки')),
                ('delivery_time', models.TimeField(verbose_name='Время доставки')),
                ('cargo_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='KilometersApp.cargotype', verbose_name='Тип груза')),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
                ('order_status', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='KilometersApp.orderstatus', verbose_name='Статус заказа')),
                ('vehicle_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='KilometersApp.vehicletype', verbose_name='Тип транспортного средства')),
            ],
            options={
                'verbose_name': 'Заказ',
                'verbose_name_plural': 'Заказы',
            },
            bases=(models.Model, KilometersApp.models.UrlMixin),
        ),
        migrations.CreateModel(
            name='Check',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('decimal', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Сумма')),
                ('date', models.DateField(verbose_name='Дата')),
                ('time', models.TimeField(verbose_name='Время')),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
                ('order', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='check_details', to='KilometersApp.order', verbose_name='Заказ')),
            ],
            options={
                'verbose_name': 'Чек',
                'verbose_name_plural': 'Чеки',
            },
            bases=(models.Model, KilometersApp.models.UrlMixin),
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('encrypted_phone', models.TextField(blank=True, null=True, verbose_name='Зашифрованный номер телефона')),
                ('is_deleted', models.BooleanField(default=False, verbose_name='Удален')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Профиль',
                'verbose_name_plural': 'Профили',
            },
            bases=(models.Model, KilometersApp.models.UrlMixin),
        ),
        migrations.CreateModel(
            name='Trailer',
            fields=[
                ('trailer_id', models.AutoField(primary_key=True, serialize=False, verbose_name='ID прицепа')),
                ('name', models.CharField(max_length=50, verbose_name='Название')),
                ('width', models.DecimalField(decimal_places=2, max_digits=5, verbose_name='Ширина')),
                ('length', models.DecimalField(decimal_places=2, max_digits=5, verbose_name='Длина')),
                ('height', models.DecimalField(decimal_places=2, max_digits=5, verbose_name='Высота')),
                ('load_capacity', models.DecimalField(decimal_places=2, max_digits=5, verbose_name='Грузоподъемность')),
                ('measurement_unit_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='KilometersApp.measurementunit', verbose_name='Единица измерения')),
                ('vehicle_type_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='KilometersApp.vehicletype', verbose_name='Тип ТС')),
            ],
            options={
                'verbose_name': 'Прицеп',
                'verbose_name_plural': 'Прицепы',
            },
            bases=(models.Model, KilometersApp.models.UrlMixin),
        ),
        migrations.CreateModel(
            name='UserActionLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('model_name', models.CharField(max_length=100, verbose_name='Название модели')),
                ('object_id', models.CharField(max_length=255, verbose_name='ID объекта')),
                ('action', models.CharField(max_length=255, verbose_name='Действие')),
                ('status', models.CharField(choices=[('INFO', 'Информация'), ('ERROR', 'Ошибка')], default='INFO', max_length=20, verbose_name='Статус')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата и время')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Лог действий',
                'verbose_name_plural': 'Логи действий',
            },
            bases=(models.Model, KilometersApp.models.UrlMixin),
        ),
        migrations.CreateModel(
            name='Vehicle',
            fields=[
                ('vehicle_id', models.AutoField(primary_key=True, serialize=False, verbose_name='ID транспортного средства')),
                ('brand', models.CharField(max_length=50, verbose_name='Марка')),
                ('license_plate', models.CharField(max_length=20, verbose_name='Госномер')),
                ('year_of_production', models.IntegerField(verbose_name='Год выпуска')),
                ('mileage', models.IntegerField(verbose_name='Пробег')),
                ('trailer_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='KilometersApp.trailer', verbose_name='Прицеп')),
                ('vehicle_status', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='KilometersApp.vehiclestatus', verbose_name='Статус')),
                ('vehicle_type_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='KilometersApp.vehicletype', verbose_name='Тип ТС')),
            ],
            options={
                'verbose_name': 'Транспортное средство',
                'verbose_name_plural': 'Транспортные средства',
            },
            bases=(models.Model, KilometersApp.models.UrlMixin),
        ),
        migrations.CreateModel(
            name='Route',
            fields=[
                ('route_id', models.AutoField(primary_key=True, serialize=False, verbose_name='ID маршрута')),
                ('route_number', models.CharField(max_length=50, unique=True, verbose_name='Номер маршрута')),
                ('driver_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='KilometersApp.driver', verbose_name='Водитель')),
                ('order_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='KilometersApp.order', verbose_name='Заказ')),
                ('vehicle_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='KilometersApp.vehicle', verbose_name='Транспортное средство')),
            ],
            options={
                'verbose_name': 'Маршрут',
                'verbose_name_plural': 'Маршруты',
            },
            bases=(models.Model, KilometersApp.models.UrlMixin),
        ),
        migrations.CreateModel(
            name='DriversLicenseCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('driver', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='license_category_entries', to='KilometersApp.driver', verbose_name='Водитель')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='KilometersApp.driverslicensecategorytype', verbose_name='Категория ВУ')),
            ],
            options={
                'verbose_name': 'Категория ВУ водителя',
                'verbose_name_plural': 'Категории ВУ водителей',
                'unique_together': {('driver', 'category')},
            },
            bases=(models.Model, KilometersApp.models.UrlMixin),
        ),
    ]
